buildscript {
	repositories {
		maven {
			url = "https://maven.minecraftforge.net"
		}
		maven {
			url = "https://maven.parchmentmc.org"
		}
		maven {
			url = "https://repo.u-team.info"
		}
		mavenCentral()
	}
	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
		classpath group: "org.parchmentmc", name: "librarian", version: "1.+", changing: true
		classpath group: "org.spongepowered", name: "mixingradle", version: "0.7.+", changing: true
		classpath group: "info.u-team.gradle_files", name: "gradle_files", version: "2.0.5"
		classpath group: "info.u-team.curse_gradle_uploader", name: "curse_gradle_uploader", version: "1.5.1"
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"
apply plugin: "org.spongepowered.mixin"
apply plugin: "info.u_team.gradle_files"
apply plugin: "info.u_team.curse_gradle_uploader"
apply plugin: "maven-publish"

gradlefiles.loaderSuffix = "forge"

group = rootProject.group
archivesBaseName = gradlefiles.archivesBaseName()
version = gradlefiles.version()

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	withSourcesJar()
	withJavadocJar()
}

minecraft {
	mappings channel: config.forge.mapping_channel, version: config.forge.mapping
	
	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
	
	runs {
		client = {
			workingDirectory file("run/client")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
			}
		}
		server = {
			workingDirectory file("run/server")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
			}
		}
	}
}

tasks.withType(Jar) { task ->
	gradlefiles.defaultJar(task)
}

tasks.withType(Javadoc) { task ->
	task.options.addStringOption("Xdoclint:none", "-quiet")
}

gradlefiles.signDefaultForgeJar()

processResources {
	doLast {
		fileTree(dir: outputs.files.asPath, include: "**/*.json").each { File file ->
			file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs += project(":common").sourceSets.common.java.srcDirs
		}
		resources {
			srcDirs += project(":common").sourceSets.common.resources.srcDirs
		}
	}
}

repositories {
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	minecraft gradlefiles.forgeDependency()
	
	runtimeOnly fg.deobf("info.u-team:u_team_core-forge-1.19.4:5.0.2.250")
	
	runtimeOnly fg.deobf("curse.maven:rubidium-574856:4448053")
	
	annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
}

mixin {
	add sourceSets.main, "gjeb.mixins.refmap.json"
	config "gjeb.mixins.json"
	
	debug.verbose = true
	debug.export = true
}

curseforge {
	apiKey = defaultPropertyValue("curseforge.token")
	
	project {
		id = config.curse.id
		releaseType = config.curse.type
		
		addGameVersion config.minecraft.version
		addGameVersion "Forge"
		addGameVersion "Java 17"
		
		relations {
			optionalDependency "u-team-core"
			optionalDependency "rubidium"
		}
		
		mainArtifact(tasks.getByName("jar")) {
			displayName = "${config.curse.display}-Forge-${config.minecraft.version}-${project.version}"
			changelogType = "html"
			changelog = "<a href=\"${gradlefiles.changelogUrl()}\">Changelog of ${project.version}</a>"
		}
	}
}

publishing {
	repositories {
		maven {
			url "https://repo.u-team.info"
			credentials {
				username = "maven"
				password = defaultPropertyValue("maven.password")
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			artifactId archivesBaseName
			
			from components.java
			
			pom {
				name = project.archivesBaseName
				description = "${config.github.name}"
				url = "https://github.com/MC-U-Team/${config.github.name}"
				scm {
					url = "https://github.com/MC-U-Team/${config.github.name}"
					connection = "scm:git:git://github.com/MC-U-Team/${config.github.name}.git"
					developerConnection = "scm:git:git@github.com:MC-U-Team/${config.github.name}.git"
				}
				issueManagement {
					system = "github"
					url = "https://github.com/MC-U-Team/${config.github.name}/issues"
				}
				licenses {
					license {
						name = "Apache License 2.0"
						url = "https://github.com/MC-U-Team/${config.github.name}/blob/${config.github.branch}/LICENSE"
						distribution = "repo"
					}
				}
				developers {
					developer {
						name = "HyCraftHD"
					}
				}
			}
		}
	}
}